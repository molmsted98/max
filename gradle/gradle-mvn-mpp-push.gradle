apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

dokka {
    outputDirectory = "$rootDir/docs"
    outputFormat = "gfm"

    multiplatform {
        global {
            sourceLink {
                path = "max/src/commonMain/kotlin"
                url = "https://github.com/pardom/max/tree/master/max/src/commonMain/kotlin"
                lineSuffix = "#L"
            }
        }
        common {}
    }
}

task emptySourcesJar(type: Jar) {
    archiveAppendix.set("empty")
}

task javadocsJar(type: Jar, dependsOn: dokka) {
    from dokka.outputDirectory
}

def selectArtifactId(project, type, defaultName) {
    def name = project.name
    def isCommon = project.ext.has("commonStructure")
    def commonIsRoot = project.ext.has("commonStructure") && project.ext.commonStructure
    def hasNative = project.ext.has("hasNative") && project.ext.hasNative
    switch (type) {
        case 'metadata':
            if (!isCommon) return "$name-$type"
            return "$name-metadata"
            break
        case 'kotlinMultiplatform':
            if (!hasNative) return "$name-kotlinMultiplatform"
            return name
            break
        case 'jvm':
            return commonIsRoot ? "$name-jvm" : "$name"
            break
        default:
            return isCommon || hasNative ? defaultName : "$name"
            break
    }
}

publishing {
    publications.all {
        artifact javadocsJar

        def type = it.name
        def id = selectArtifactId(project, type, it.artifactId)
        it.artifactId = id

        if (name == "kotlinMultiplatform") {
            it.artifact(emptyJar) { classifier 'javadoc' }
            it.artifact(emptyJar) { classifier 'kdoc' }
        }
    }
}
